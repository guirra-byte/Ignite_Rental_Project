// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {

  id          String   @id @default(uuid())
  name        String   @unique
  description String
  created_at  DateTime @default(now())

  car Car[]

  @@map("category")
}

model Specifications {

  id          String   @id @default(uuid())
  name        String   @unique
  description String
  created_at  DateTime @default(now())

  CarEspecification CarSpecification[]
  Car               Car                @relation(fields: [car_id], references: [id])
  car_id            String             @unique


  @@map("specification")
}

model User {

  id             String   @id @default(uuid())
  name           String
  username       String   @unique
  password       String   @unique
  email          String   @unique
  driver_license String   @unique
  isAdmin        Boolean  @default(false)
  created_at     DateTime @default(now())
  avatar         String?

  @@map("user")
}

model Car {

  id             String   @id @default(uuid())
  name           String   @unique
  description    String
  daily_rate     Int
  available      Boolean  @default(true)
  license_plate  String   @unique
  fine_amount    String
  brand          String
  created_at     DateTime @default(now())
  fk_category_id Category @relation(fields: [category_id], references: [id])
  category_id    String

  CarSpecification CarSpecification[]
  Specifications   Specifications[]
  CarImages        CarImages[]

  @@map("cars")
}

model CarImages {

  id         String   @id @default(uuid())
  image_name String
  car_id     String
  car        Car      @relation(fields: [car_id], references: [id])
  created_at DateTime @default(now())

  @@map("carImages")
}

model CarSpecification {

  car_id           String         @unique
  car              Car            @relation(fields: [car_id], references: [id])
  specification_id String         @unique
  specification    Specifications @relation(fields: [specification_id], references: [id])

  @@id([car_id, specification_id])
  @@map("car_specification")
}

//Relacionamento entre Car e Category
//É um relacionamento Many to One;
//Podemos concluir que Uma Category pode conter vários Cars;
//Mas um Car só pode pertencer apenas a uma Category;

//Relacionamento entre Car e Specification
//É um relacionamento Many to Many;
//Onde podemos concluir que um Carro
//pode conter inúmeras especificações
//E uma Specificação pode conter inúmeros Carros
